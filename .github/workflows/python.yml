name: Python CI/CD

on:
  push:
    branches: [main, develop]
    paths:
      - 'python/**'
      - 'app.py'
      - 'requirements.txt'
      - '.github/workflows/python.yml'
  pull_request:
    branches: [main]
    paths:
      - 'python/**'
      - 'app.py'
      - 'requirements.txt'
      - '.github/workflows/python.yml'

jobs:
  test:
    name: 测试-Python${{ matrix.python-version }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.8, 3.9, '3.10', 3.11]
    
    steps:
      - name: 检出代码
        uses: actions/checkout@v4
      
      - name: 设置Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'
      
      - name: 安装依赖
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest pytest-cov black flake8 mypy
      
      - name: 代码格式检查
        run: |
          black --check .
          flake8 .
      
      - name: 类型检查
        run: |
          mypy app.py python/ || true
      
      - name: 运行测试
        run: |
          pytest --cov=./ --cov-report=xml
      
      - name: 上传覆盖率报告
        uses: codecov/codecov-action@v3
        with:
          file: ./coverage.xml
          flags: python

  security:
    name: 安全扫描
    runs-on: ubuntu-latest
    
    steps:
      - name: 检出代码
        uses: actions/checkout@v4
      
      - name: 设置Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'
      
      - name: 安装安全扫描工具
        run: |
          pip install bandit safety
      
      - name: 运行安全扫描
        run: |
          bandit -r . -f json -o bandit-report.json || true
          safety check --json --output safety-report.json || true
      
      - name: 上传安全报告
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: security-reports
          path: |
            bandit-report.json
            safety-report.json 